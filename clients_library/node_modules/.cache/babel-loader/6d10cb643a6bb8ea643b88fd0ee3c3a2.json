{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\pages\\\\Cabinet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button, Container } from \"react-bootstrap\";\nimport CreateRecipe from '../modals/CreateRecipe';\nimport { Context } from \"../index\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { fetchOneRecipe, fetchRecipes } from '../http/recipeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cabinet = () => {\n  _s();\n\n  const history = useHistory();\n  const [recipeVisible, setRecipeVisible] = useState(false);\n  const {\n    recipe\n  } = useContext(Context);\n  const {\n    users\n  } = useContext(Context);\n  const [recipes, setRecipe] = useState({\n    info: []\n  });\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchRecipes().then(data => recipe.setRecipe(data));\n    fetchOneRecipe(id).then(data => setRecipe(data));\n  }, []);\n\n  const createCsvTable = csvData => {\n    csvData.push(['name', 'time', 'complex', 'profile_mini', 'profile', 'rating', 'kcal', 'protein', 'fat', 'carb', 'typeId']);\n    let rowAr = [];\n    recipe.recipes.map(publ => {\n      if (publ.id === parseInt(recipes.id)) rowAr = [];\n      rowAr.push(\"'\" + recipe.recipes.find(a => a.id === recipe.id).name.toString() + \"'\");\n      rowAr.push(\"'\" + publ.time.toString() + \"'\");\n      rowAr.push(\"'\" + publ.complex.toString() + \"'\");\n      rowAr.push(\"'\" + publ.profile_mini.toString() + \"'\");\n      rowAr.push(\"'\" + publ.profile.toString() + \"'\");\n      rowAr.push(\"'\" + publ.rating.toString() + \"'\");\n      rowAr.push(\"'\" + publ.kcal.toString() + \"'\");\n      rowAr.push(\"'\" + publ.protein.toString() + \"'\");\n      rowAr.push(\"'\" + publ.fat.toString() + \"'\");\n      rowAr.push(\"'\" + publ.carb.toString() + \"'\"); // rowAr.push(\"'\"+recipe.authors.find((a) => a.id === publ.authorId).name.toString()+\"'\")\n      // rowAr.push(\"'\"+recipe.themes.find((a) => a.id === publ.themeId).name.toString()+\"'\")\n      // rowAr.push(\"'\"+recipe.dialects.find((a) => a.id === publ.dialectId).name.toString()+\"'\")\n      // rowAr.push(\"'\"+recipe.regions.find((a) => a.id === publ.regionId).name.toString()+\"'\")\n      // rowAr.push(\"'\"+recipe.publicators.find((a) => a.id === publ.publicatorId).name.toString()+\"'\")\n\n      rowAr.push(\"'\" + recipe.types.find(a => a.id === publ.typeId).name.toString() + \"'\");\n      csvData.push(rowAr);\n    });\n    return csvData;\n  };\n\n  const csvData = [];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      className: \"ml-2\",\n      onClick: () => setRecipeVisible(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateRecipe, {\n      show: recipeVisible,\n      onHide: () => setRecipeVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"small-text\",\n        children: \" \\u0412\\u0430\\u0448\\u0438 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u044B:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: /*#__PURE__*/_jsxDEV(CSVLink, {\n        class: \"dropdown-item\",\n        data: createCsvTable(csvData),\n        children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B EXCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cabinet, \"fK3ivQsS3rvm+ogMn7qzBhApSxQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Cabinet;\nexport default Cabinet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cabinet\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/pages/Cabinet.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","Button","Container","CreateRecipe","Context","CSVLink","CSVDownload","fetchOneRecipe","fetchRecipes","Cabinet","history","recipeVisible","setRecipeVisible","recipe","users","recipes","setRecipe","info","id","then","data","createCsvTable","csvData","push","rowAr","map","publ","parseInt","find","a","name","toString","time","complex","profile_mini","profile","rating","kcal","protein","fat","carb","types","typeId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,iBAAhC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAACe,IAAAA;AAAD,MAAWjB,UAAU,CAACQ,OAAD,CAA3B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAUlB,UAAU,CAACQ,OAAD,CAA1B;AACA,QAAM,CAACW,OAAD,EAAUC,SAAV,IAAuBlB,QAAQ,CAAC;AAACmB,IAAAA,IAAI,EAAC;AAAN,GAAD,CAArC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOlB,SAAS,EAAtB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,GAAGW,IAAf,CAAoBC,IAAI,IAAIP,MAAM,CAACG,SAAP,CAAiBI,IAAjB,CAA5B;AACAb,IAAAA,cAAc,CAACW,EAAD,CAAd,CAAmBC,IAAnB,CAAwBC,IAAI,IAAIJ,SAAS,CAACI,IAAD,CAAzC;AACH,GAHQ,EAGP,EAHO,CAAT;;AAMA,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAChCA,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EACT,cADS,EACO,SADP,EACkB,QADlB,EAET,MAFS,EAED,SAFC,EAEU,KAFV,EAEiB,MAFjB,EAEwB,QAFxB,CAAb;AAGA,QAAIC,KAAK,GAAG,EAAZ;AACAX,IAAAA,MAAM,CAACE,OAAP,CAAeU,GAAf,CAAmBC,IAAI,IAAG;AACtB,UAAIA,IAAI,CAACR,EAAL,KAAYS,QAAQ,CAACZ,OAAO,CAACG,EAAT,CAAxB,EAEAM,KAAK,GAAG,EAAR;AACAA,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIV,MAAM,CAACE,OAAP,CAAea,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACX,EAAF,KAASL,MAAM,CAACK,EAA3C,EAA+CY,IAA/C,CAAoDC,QAApD,EAAJ,GAAmE,GAA9E;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACM,IAAL,CAAUD,QAAV,EAAJ,GAAyB,GAApC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACO,OAAL,CAAaF,QAAb,EAAJ,GAA4B,GAAvC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACQ,YAAL,CAAkBH,QAAlB,EAAJ,GAAiC,GAA5C;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACS,OAAL,CAAaJ,QAAb,EAAJ,GAA4B,GAAvC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACU,MAAL,CAAYL,QAAZ,EAAJ,GAA2B,GAAtC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACW,IAAL,CAAUN,QAAV,EAAJ,GAAyB,GAApC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACY,OAAL,CAAaP,QAAb,EAAJ,GAA4B,GAAvC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACa,GAAL,CAASR,QAAT,EAAJ,GAAwB,GAAnC;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIG,IAAI,CAACc,IAAL,CAAUT,QAAV,EAAJ,GAAyB,GAApC,EAbsB,CAetB;AACA;AACA;AACA;AACA;;AACAP,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAIV,MAAM,CAAC4B,KAAP,CAAab,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACX,EAAF,KAASQ,IAAI,CAACgB,MAAvC,EAA+CZ,IAA/C,CAAoDC,QAApD,EAAJ,GAAmE,GAA9E;AAEAT,MAAAA,OAAO,CAACC,IAAR,CAAaC,KAAb;AACC,KAvBL;AA0BA,WAAOF,OAAP;AACH,GAhCD;;AAkCA,QAAMA,OAAO,GAAG,EAAhB;AAGI,sBACA,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,cAAjB;AAAiC,MAAA,SAAS,EAAC,MAA3C;AAAkD,MAAA,OAAO,EAAE,MAAMV,gBAAgB,CAAC,IAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED,aAApB;AAAmC,MAAA,MAAM,EAAE,MAAKC,gBAAgB,CAAC,KAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACY;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUY,QAAC,MAAD;AAAA,6BAAQ,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,eAAf;AAA+B,QAAA,IAAI,EAAES,cAAc,CAACC,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBP,CAlED;;GAAMb,O;UACcV,U,EAKHC,S;;;KANXS,O;AAoEN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Button, Container} from \"react-bootstrap\"\r\nimport CreateRecipe from '../modals/CreateRecipe';\r\nimport {Context} from \"../index\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { fetchOneRecipe, fetchRecipes } from '../http/recipeAPI';\r\n\r\nconst Cabinet = () => {\r\n    const history = useHistory()\r\n    const [recipeVisible, setRecipeVisible] = useState(false)\r\n    const {recipe} = useContext(Context)\r\n    const {users} = useContext(Context)\r\n    const [recipes, setRecipe] = useState({info:[]})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchRecipes().then(data => recipe.setRecipe(data))\r\n        fetchOneRecipe(id).then(data => setRecipe(data))\r\n    },[])\r\n\r\n\r\n    const createCsvTable = (csvData) => {\r\n        csvData.push(['name', 'time', 'complex',\r\n            'profile_mini', 'profile', 'rating',\r\n            'kcal', 'protein', 'fat', 'carb','typeId'])\r\n        let rowAr = [];\r\n        recipe.recipes.map(publ =>{\r\n            if (publ.id === parseInt(recipes.id))\r\n            \r\n            rowAr = []\r\n            rowAr.push(\"'\"+recipe.recipes.find((a) => a.id === recipe.id).name.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.time.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.complex.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.profile_mini.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.profile.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.rating.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.kcal.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.protein.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.fat.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.carb.toString()+\"'\")\r\n\r\n            // rowAr.push(\"'\"+recipe.authors.find((a) => a.id === publ.authorId).name.toString()+\"'\")\r\n            // rowAr.push(\"'\"+recipe.themes.find((a) => a.id === publ.themeId).name.toString()+\"'\")\r\n            // rowAr.push(\"'\"+recipe.dialects.find((a) => a.id === publ.dialectId).name.toString()+\"'\")\r\n            // rowAr.push(\"'\"+recipe.regions.find((a) => a.id === publ.regionId).name.toString()+\"'\")\r\n            // rowAr.push(\"'\"+recipe.publicators.find((a) => a.id === publ.publicatorId).name.toString()+\"'\")\r\n            rowAr.push(\"'\"+recipe.types.find((a) => a.id === publ.typeId).name.toString()+\"'\")\r\n            \r\n            csvData.push(rowAr)\r\n            }\r\n        )\r\n\r\n        return csvData\r\n    }\r\n\r\n    const csvData = [\r\n    ];\r\n\r\n        return (          \r\n        <Container className=\"tbody\">\r\n            <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setRecipeVisible(true)}>Добавить рецепт</Button>\r\n            <CreateRecipe show={recipeVisible} onHide={()=> setRecipeVisible(false)}/>\r\n            <div className=\"\">\r\n                        <p className=\"small-text\"> Ваши рецепты:</p>\r\n                        {/* {user.users.map(data=> {\r\n                            if (data.Id === recipes.userId)\r\n                            <p>return {data.name}</p>})} */}\r\n                        \r\n                    </div>\r\n                    <Button><CSVLink class=\"dropdown-item\" data={createCsvTable(csvData)} >Экспорт таблицы EXCEL</CSVLink></Button>\r\n        </Container>\r\n        \r\n        );\r\n    \r\n};\r\n\r\nexport default Cabinet;"]},"metadata":{},"sourceType":"module"}