{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\pages\\\\Cabinet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button, Container } from \"react-bootstrap\";\nimport CreateRecipe from '../modals/CreateRecipe';\nimport { Context } from \"../index\";\nimport { fetchOneRecipe, fetchRecipes } from '../http/recipeAPI';\nimport { observer } from 'mobx-react-lite';\nimport { fetchOneUser } from '../http/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cabinet = observer(_c = _s(() => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [recipeVisible, setRecipeVisible] = useState(false);\n  const {\n    recipe\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context);\n  const [users, setUserId] = useState({\n    info: []\n  }); //const [recipes, setRecipe] = useState({info:[]})\n  //const {id} = useParams()\n\n  useEffect(() => {\n    fetchRecipes().then(data => recipe.setRecipe(data)); //fetchOneRecipe(id).then(data => setRecipe(data))\n\n    fetchOneUser(id).then(data => setUserId(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      className: \"ml-2\",\n      onClick: () => setRecipeVisible(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateRecipe, {\n      show: recipeVisible,\n      onHide: () => setRecipeVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"small-text\",\n        children: \" \\u0412\\u0430\\u0448\\u0438 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u044B:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), recipe.recipes.map(data => {\n        if (data.userId === user.id) /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"bafSH8GTbM4aKLYgl7gPJ+hJGgw=\", false, function () {\n  return [useHistory, useParams];\n}));\n_c2 = Cabinet;\nexport default Cabinet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cabinet$observer\");\n$RefreshReg$(_c2, \"Cabinet\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/pages/Cabinet.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","Button","Container","CreateRecipe","Context","fetchOneRecipe","fetchRecipes","observer","fetchOneUser","Cabinet","history","id","recipeVisible","setRecipeVisible","recipe","user","users","setUserId","info","then","data","setRecipe","recipes","map","userId","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,iBAAhC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,OAAO,GAAGF,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAMG,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM;AAACY,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAWlB,UAAU,CAACQ,OAAD,CAA3B;AACA,QAAM;AAACW,IAAAA;AAAD,MAASnB,UAAU,CAACQ,OAAD,CAAzB;AACA,QAAM,CAACY,KAAD,EAAQC,SAAR,IAAqBnB,QAAQ,CAAC;AAACoB,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAnC,CAN2B,CAO3B;AACA;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,GAAGa,IAAf,CAAoBC,IAAI,IAAIN,MAAM,CAACO,SAAP,CAAiBD,IAAjB,CAA5B,EADY,CAEZ;;AACAZ,IAAAA,YAAY,CAACG,EAAD,CAAZ,CAAiBQ,IAAjB,CAAsBC,IAAI,IAAEH,SAAS,CAACG,IAAD,CAArC;AACH,GAJQ,EAIP,EAJO,CAAT;AAKI,sBACA,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,cAAjB;AAAiC,MAAA,SAAS,EAAC,MAA3C;AAAkD,MAAA,OAAO,EAAE,MAAMP,gBAAgB,CAAC,IAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED,aAApB;AAAmC,MAAA,MAAM,EAAE,MAAKC,gBAAgB,CAAC,KAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACY;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,EAEcC,MAAM,CAACQ,OAAP,CAAeC,GAAf,CAAmBH,IAAI,IAAG;AACxB,YAAIA,IAAI,CAACI,MAAL,KAAgBT,IAAI,CAACJ,EAAzB,EACA;AAAA,0BAAKS,IAAI,CAACK,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB,OAFtB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeP,CA7BuB;AAAA,UACJ1B,UADI,EAEPC,SAFO;AAAA,GAAxB;MAAMS,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Button, Container} from \"react-bootstrap\"\r\nimport CreateRecipe from '../modals/CreateRecipe';\r\nimport {Context} from \"../index\";\r\nimport { fetchOneRecipe, fetchRecipes } from '../http/recipeAPI';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchOneUser } from '../http/userAPI';\r\n\r\nconst Cabinet = observer(() => {\r\n    const history = useHistory()\r\n    const {id} = useParams()\r\n    const [recipeVisible, setRecipeVisible] = useState(false)\r\n    const {recipe} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n    const [users, setUserId] = useState({info:[]})\r\n    //const [recipes, setRecipe] = useState({info:[]})\r\n    //const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchRecipes().then(data => recipe.setRecipe(data))\r\n        //fetchOneRecipe(id).then(data => setRecipe(data))\r\n        fetchOneUser(id).then(data=>setUserId(data))\r\n    },[])\r\n        return (          \r\n        <Container className=\"tbody\">\r\n            <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setRecipeVisible(true)}>Добавить рецепт</Button>\r\n            <CreateRecipe show={recipeVisible} onHide={()=> setRecipeVisible(false)}/>\r\n            <div className=\"\">\r\n                        <p className=\"small-text\"> Ваши рецепты:</p>\r\n                         {recipe.recipes.map(data=> {\r\n                            if (data.userId === user.id)\r\n                            <p> {data.name}</p>})}\r\n                        \r\n                    </div>\r\n        </Container>\r\n        \r\n        );\r\n    \r\n});\r\n\r\nexport default Cabinet;"]},"metadata":{},"sourceType":"module"}