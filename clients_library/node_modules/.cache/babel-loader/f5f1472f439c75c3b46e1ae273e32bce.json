{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\pages\\\\RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from \"../index\";\nimport { Container, Row, Col, Image, DropdownButton, Button } from 'react-bootstrap';\nimport star from '../assets/Layer.png';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { fetchOneRecipe, deleteRecipe } from '../http/recipeAPI';\nimport { fetchTypes } from '../http/typeAPI';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { fetchProducts, fetchProportions } from '../http/productAPI';\nimport DeleteAndUpdateRecipe from '../modals/UpdateRecipe';\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\nimport { fetchUser } from '../http/userAPI';\nimport jwt_decode from \"jwt-decode\";\nimport { MAIN_ROUTE } from '../utils/consts'; //import { fetchRecipekcals } from '../http/recipekcalsAPI';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipePage = observer(_c = _s(() => {\n  _s();\n\n  const history = useHistory();\n  const [recipes, setRecipe] = useState({\n    info: []\n  }); //const [recipekcal, setRecipekcals] = useState({info:[]})\n\n  const [DelAndUpRecipeVisible, setDelAndUpRecipeVisible] = useState(false);\n  const {\n    recipe\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context);\n  const {\n    id\n  } = useParams();\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  useEffect(() => {\n    fetchOneRecipe(id).then(data => setRecipe(data));\n    fetchTypes().then(data => recipe.setTypes(data));\n    fetchProducts().then(data => recipe.setProducts(data));\n    fetchProportions().then(data => recipe.setProportions(data));\n    fetchUser().then(data => recipe.setUser(data)); //fetchRecipekcals().then(data => recipe.setRecipekcals(data))\n  }, []);\n  console.log(recipe);\n  const proportion = []; // const type=[]\n\n  const products = [];\n\n  const createCsvTable = csvData => {\n    csvData.push(['name', 'time', 'complex', 'profile_mini', 'profile', 'rating', 'kcal', 'protein', 'fat', 'carb', 'typeId']);\n    let rowAr = [];\n    recipe.recipes.map(publ => {\n      if (publ.id === parseInt(recipes.id)) {\n        rowAr = [];\n        rowAr.push(\"'\" + publ.name.toString() + \"'\");\n        rowAr.push(\"'\" + publ.time.toString() + \"'\");\n        rowAr.push(\"'\" + publ.complex.toString() + \"'\");\n        rowAr.push(\"'\" + publ.profile_mini.toString() + \"'\");\n        rowAr.push(\"'\" + publ.profile.toString() + \"'\");\n        rowAr.push(\"'\" + publ.kcal.toString() + \"'\");\n        rowAr.push(\"'\" + publ.protein.toString() + \"'\");\n        rowAr.push(\"'\" + publ.fat.toString() + \"'\");\n        rowAr.push(\"'\" + publ.carb.toString() + \"'\");\n        rowAr.push(\"'\" + recipe.types.find(a => a.id === publ.typeId).name.toString() + \"'\");\n      }\n\n      csvData.push(rowAr);\n    });\n    return csvData;\n  };\n\n  const csvData = [];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        className: \"photo\",\n        width: 300,\n        height: 300,\n        src: recipe.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [recipes.userId, recipe.users.map(items => {\n          if (items.id === parseInt(recipes.userId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"infotext\",\n            children: [\" \", items.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"export\",\n          children: /*#__PURE__*/_jsxDEV(CSVLink, {\n            class: \"dropdown-item\",\n            data: createCsvTable(csvData),\n            children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"namerec1\",\n          children: recipes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"descript_mini\",\n          children: recipes.profile_mini\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xar\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textinfo\",\n            children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\", recipe.types.map(items => {\n              if (items.id === parseInt(recipes.typeId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"infotext\",\n                children: [\" \", items.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 36\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textinfo\",\n            children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\", /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"infotext\",\n              children: recipes.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"col2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"textinfo\",\n              children: [\"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\", /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"infotext\",\n                children: recipes.complex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"textinfo\",\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438\", /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"infotext\",\n                children: [\" \", recipes.kcal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decriptrec\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"spisok\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product1\",\n          children: recipe.proportions.map(proportion => {\n            if (recipes.id === parseInt(proportion.recipeId)) return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"kolvo\",\n              children: recipe.products.map(products => {\n                if (products.id === proportion.productId) return /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: \"prodtext\",\n                  children: [products.name, \":\\u2003\\u2003\\u2003\\u2003 \", proportion.kolvo, \" \\u0433\\u0440\\u0430\\u043C\\u043C\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 162\n                  }, this)]\n                }, products.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 52\n                }, this);\n              })\n            }, proportion.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 44\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calor\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"spisok\",\n          children: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spcal\",\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438 \\u2003\\u2003\\u2003\\u2003 \", recipes.kcal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 102\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0411\\u0435\\u043B\\u043A\\u0438 \\u2003\\u2003\\u2003\\u2003 \", recipes.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0416\\u0438\\u0440\\u044B \\u2003\\u2003\\u2003\\u2003 \", recipes.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B \\u2003\\u2003\\u2003\\u2003 \", recipes.carb]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"steps\",\n          children: \"\\u042D\\u0442\\u0430\\u043F\\u044B \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: recipes.profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this), user.isAuth ? recipes.userId == parseInt(decodedData.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        className: \"ml-2\",\n        onClick: () => setDelAndUpRecipeVisible(true),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u043B\\u0438 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteAndUpdateRecipe, {\n        idRecipe: recipes,\n        show: DelAndUpRecipeVisible,\n        onHide: () => setDelAndUpRecipeVisible(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prtype\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}, \"XjHh5MEWpreP1n1zLjKoGAA6NI0=\", false, function () {\n  return [useHistory, useParams];\n}));\n_c2 = RecipePage;\nexport default RecipePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecipePage$observer\");\n$RefreshReg$(_c2, \"RecipePage\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/pages/RecipePage.js"],"names":["React","useContext","useEffect","useState","Context","Container","Row","Col","Image","DropdownButton","Button","star","useHistory","useParams","observer","fetchOneRecipe","deleteRecipe","fetchTypes","CSVLink","CSVDownload","fetchProducts","fetchProportions","DeleteAndUpdateRecipe","DropdownItem","fetchUser","jwt_decode","MAIN_ROUTE","RecipePage","history","recipes","setRecipe","info","DelAndUpRecipeVisible","setDelAndUpRecipeVisible","recipe","user","id","storedToken","localStorage","getItem","decodedData","then","data","setTypes","setProducts","setProportions","setUser","console","log","proportion","products","createCsvTable","csvData","push","rowAr","map","publ","parseInt","name","toString","time","complex","profile_mini","profile","kcal","protein","fat","carb","types","find","a","typeId","img","userId","users","items","proportions","recipeId","productId","kolvo","isAuth"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport { Container, Row, Col, Image, DropdownButton, Button } from 'react-bootstrap';\r\nimport star from '../assets/Layer.png';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchOneRecipe, deleteRecipe } from '../http/recipeAPI';\r\nimport { fetchTypes } from '../http/typeAPI';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { fetchProducts, fetchProportions } from '../http/productAPI';\r\nimport DeleteAndUpdateRecipe from '../modals/UpdateRecipe';\r\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\r\nimport { fetchUser } from '../http/userAPI';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { MAIN_ROUTE } from '../utils/consts';\r\n//import { fetchRecipekcals } from '../http/recipekcalsAPI';\r\n\r\n\r\n\r\nconst RecipePage = observer(() => {\r\n    const history = useHistory()\r\n    const [recipes, setRecipe] = useState({info:[]})\r\n    //const [recipekcal, setRecipekcals] = useState({info:[]})\r\n    const [DelAndUpRecipeVisible, setDelAndUpRecipeVisible] = useState(false)\r\n    const {recipe} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n    const {id} = useParams()\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n    useEffect(()=>{\r\n        fetchOneRecipe(id).then(data => setRecipe(data))\r\n        fetchTypes().then(data => recipe.setTypes(data))\r\n        fetchProducts().then(data => recipe.setProducts(data))\r\n        fetchProportions().then(data => recipe.setProportions(data))\r\n        fetchUser().then(data=>recipe.setUser(data))\r\n        //fetchRecipekcals().then(data => recipe.setRecipekcals(data))\r\n    },[])\r\n\r\n    console.log(recipe)\r\n\r\n\r\n    const proportion = []\r\n    // const type=[]\r\n    const products=[]\r\n    const createCsvTable = (csvData) => {\r\n        csvData.push(['name', 'time', 'complex',\r\n            'profile_mini', 'profile', 'rating',\r\n            'kcal', 'protein', 'fat', 'carb','typeId'])\r\n        let rowAr = [];\r\n        recipe.recipes.map(publ =>{\r\n            if (publ.id === parseInt(recipes.id))\r\n            {\r\n            rowAr = []\r\n            rowAr.push(\"'\"+publ.name.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.time.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.complex.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.profile_mini.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.profile.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.kcal.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.protein.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.fat.toString()+\"'\")\r\n            rowAr.push(\"'\"+publ.carb.toString()+\"'\")\r\n            rowAr.push(\"'\"+recipe.types.find((a) => a.id === publ.typeId).name.toString()+\"'\")\r\n            }\r\n            csvData.push(rowAr)\r\n            }\r\n        )\r\n\r\n        return csvData\r\n    }\r\n    \r\n    const csvData = [\r\n    ];\r\n    \r\n        return (\r\n            <Container\r\n            className=\"tbody\">\r\n                    <div>\r\n                   \r\n\r\n\r\n                    <Image className=\"photo\" width={300} height={300} src={recipe.img}/>\r\n                    <div className=\"info\">\r\n                        {recipes.userId}\r\n                        {recipe.users.map(items => {\r\n                        if (items.id === parseInt(recipes.userId))\r\n                            return <text className=\"infotext\"> {items.name}</text>\r\n                    })} \r\n                    <Button className=\"export\"><CSVLink class=\"dropdown-item\" data={createCsvTable(csvData)} >Скачать рецепт</CSVLink></Button>\r\n                    <h2 className=\"namerec1\">{recipes.name}</h2>\r\n                    {/* <div className=\"raterec\"> <text>{recipes.rating}</text><img width={20} height={20} src={star}/> </div> */}\r\n                    <text className=\"descript_mini\">{recipes.profile_mini}</text>\r\n                    \r\n                    <div className=\"xar\">\r\n                    <p className=\"textinfo\">Категория\r\n                    {recipe.types.map(items => {\r\n                        if (items.id === parseInt(recipes.typeId))\r\n                            return <text className=\"infotext\"> {items.name}</text>\r\n                    })}</p>\r\n                    \r\n                    <p className=\"textinfo\">Время приготовления\r\n                    <text className=\"infotext\">{recipes.time}</text></p>\r\n                    <div id=\"col2\">\r\n                    <p className=\"textinfo\">Сложность\r\n                    <text className=\"infotext\" >{recipes.complex}</text></p>\r\n                    \r\n                    <p className=\"textinfo\">Калории  \r\n                    <text className=\"infotext\"> {recipes.kcal}</text></p>                    \r\n                    </div></div></div>\r\n\r\n                    <div className=\"decriptrec\">\r\n                        <p className='spisok'>Список продуктов</p>\r\n                        <div className=\"product1\">\r\n                            {recipe.proportions.map(proportion => {\r\n                                if (recipes.id === parseInt(proportion.recipeId))\r\n                                    return <p className=\"kolvo\" key={proportion.id}>\r\n                                        {recipe.products.map(products => {\r\n                                            if (products.id === proportion.productId)\r\n                                            return <text className=\"prodtext\" key={products.id}>{products.name}:&emsp;&emsp;&emsp;&emsp; {proportion.kolvo} грамм<hr/></text> \r\n                                        }\r\n                                    )}\r\n                                    </p>\r\n                            }\r\n                        )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"calor\">\r\n                        <p className='spisok'>Калории</p>\r\n                            <div className=\"spcal\">\r\n                            <text className=\"\"><p>Калории &emsp;&emsp;&emsp;&emsp; {recipes.kcal}</p><hr/>\r\n                            <p>Белки &emsp;&emsp;&emsp;&emsp; {recipes.protein}</p><hr/>\r\n                            <p>Жиры &emsp;&emsp;&emsp;&emsp; {recipes.fat}</p><hr/>\r\n                            <p>Углеводы &emsp;&emsp;&emsp;&emsp; {recipes.carb}</p>\r\n                            </text>\r\n                    </div></div>\r\n                    <div className=\"step\">\r\n                    <h2 className=\"steps\">Этапы приготовления</h2>\r\n                    <text>{recipes.profile}</text>\r\n                    </div>\r\n                </div>\r\n                {user.isAuth? (recipes.userId == parseInt(decodedData.id))?\r\n                <div>\r\n                <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setDelAndUpRecipeVisible(true)}>Удалить или редактировать рецепт</Button>\r\n                <DeleteAndUpdateRecipe idRecipe={recipes} show={DelAndUpRecipeVisible} onHide={()=> setDelAndUpRecipeVisible(false)}/>\r\n                   </div> :\r\n                    <div></div>  \r\n                    :\r\n                    <div></div>       \r\n                 \r\n                }\r\n            <div className=\"prtype\"></div>\r\n            </Container>\r\n\r\n\r\n\r\n        );\r\n    \r\n});\r\n\r\nexport default RecipePage;"]},"metadata":{},"sourceType":"module"}