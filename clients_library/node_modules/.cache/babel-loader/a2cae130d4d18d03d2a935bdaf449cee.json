{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\modals\\\\DeleteProportion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Form, Col, Container } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport '../css.css';\nimport jwt_decode from \"jwt-decode\";\nimport { deleteProportion, fetchProducts, fetchProportions } from '../http/productAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteAndUpdateProportion = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const [Prop, SetProp] = useState('');\n  const [recipeId, setrecipeId] = useState('');\n  const {\n    user,\n    recipe\n  } = useContext(Context);\n  useEffect(() => {\n    //fetchOneUser(id).then(data => setUsers(data))\n    fetchProducts().then(data => recipe.setProducts(data));\n    fetchProportions().then(data => recipe.setProportions(data));\n  }, []);\n\n  const delProportion = () => {\n    deleteProportion(Prop).then();\n  };\n\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    contentClassName: \"pr0\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u043F\\u043E\\u0440\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: recipeId,\n              className: \"q1\",\n              onChange: e => setrecipeId(e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), user.recipes.map(recipe => {\n                if (parseInt(decodedData.id) === parseInt(recipe.userId)) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: recipe.id,\n                  children: recipe.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 24\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), recipe.proportions.map(proportion => {\n            if (parseInt(recipeId) === parseInt(proportion.recipeId)) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: recipe.products.map(product => {\n                if (product.id === proportion.productId) return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  value: proportion.id,\n                  onChange: e => SetProp(e.target.value),\n                  label: `${product.name}: ${proportion.kolvo} грамм`\n                }, proportion.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 28\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: delProportion,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteAndUpdateProportion, \"qduXwDohvyg2ZjIi6XuaqX3uLJw=\");\n\n_c = DeleteAndUpdateProportion;\nexport default DeleteAndUpdateProportion;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAndUpdateProportion\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/modals/DeleteProportion.js"],"names":["React","useContext","useEffect","useState","Button","Form","Col","Container","Modal","Context","jwt_decode","deleteProportion","fetchProducts","fetchProportions","DeleteAndUpdateProportion","show","onHide","Prop","SetProp","recipeId","setrecipeId","user","recipe","then","data","setProducts","setProportions","delProportion","storedToken","localStorage","getItem","decodedData","e","target","value","recipes","map","parseInt","id","userId","name","proportions","proportion","products","product","productId","kolvo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport {Button, Form, Col, Container} from \"react-bootstrap\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport {Context} from \"../index\";\r\nimport '../css.css';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deleteProportion, fetchProducts, fetchProportions } from '../http/productAPI';\r\n\r\n\r\n\r\n\r\nconst DeleteAndUpdateProportion = ({show, onHide}) => {\r\n    \r\n    const [Prop, SetProp] = useState('')\r\n    const [recipeId, setrecipeId] = useState('')\r\n    const {user, recipe}=useContext(Context)\r\n    \r\n    useEffect(() => {\r\n        //fetchOneUser(id).then(data => setUsers(data))\r\n        fetchProducts().then(data => recipe.setProducts(data))\r\n        fetchProportions().then(data => recipe.setProportions(data))\r\n    },[])\r\n\r\n    const delProportion = () =>{\r\n        deleteProportion(Prop).then()\r\n    }\r\n    \r\n  \r\n   \r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    return (\r\n        \r\n        <Modal \r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered contentClassName=\"pr0\">\r\n        <Container className=\"form\">\r\n        <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Удаление пропорций\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n           \r\n            <Col md={7}>\r\n            <Form.Control as=\"select\" value={recipeId} className='q1' onChange={(e) => setrecipeId(e.target.value)} defaultValue=\"Продукт...\">\r\n                <option>Выберите рецепт</option>\r\n                {user.recipes.map(recipe =>{\r\n                if(parseInt(decodedData.id) === parseInt(recipe.userId))\r\n                return <option  value={recipe.id}>{recipe.name}</option> \r\n                    })}\r\n                    </Form.Control></Col>\r\n\r\n               \r\n                {recipe.proportions.map(proportion => {\r\n                    if (parseInt(recipeId) === parseInt(proportion.recipeId))\r\n                    return <p>{recipe.products.map(product => {\r\n                        if (product.id === proportion.productId)\r\n                        return <Form.Check type=\"radio\" value={proportion.id} key={proportion.id} onChange={(e) => SetProp(e.target.value)} label={`${product.name}: ${proportion.kolvo} грамм`}/> \r\n                            }\r\n                        )}</p>\r\n                    }\r\n                )}\r\n\r\n               \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button className=\"recbut\" onClick={onHide}>Закрыть</Button>\r\n            <Button className=\"recbut\" onClick={delProportion}>Удалить</Button>\r\n        </Modal.Footer>\r\n        </Container></Modal>\r\n    );\r\n  }\r\n  \r\nexport default DeleteAndUpdateProportion;"]},"metadata":{},"sourceType":"module"}