{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\components\\\\NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Context } from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { CALORIES_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, TYPE_ROUTE, USER_ROUTE } from '../utils/consts';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Container, Image } from \"react-bootstrap\";\nimport { observer } from 'mobx-react-lite';\nimport Logotip from \"../assets/Logotip.png\";\nimport \"../css.css\";\nimport { fetchTypes } from '../http/typeAPI';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const history = useHistory();\n  const {\n    recipe\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => recipe.setTypes(data));\n  }, []);\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    variant: \"dark\",\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ml-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"main\",\n          id: \"d1\",\n          variant: \"outline-light\",\n          onClick: () => history.push(MAIN_ROUTE),\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"main\",\n          id: \"d2\",\n          variant: \"outline-light\",\n          onClick: () => history.push(CALORIES_ROUTE),\n          children: \"\\u041F\\u043E\\u0434\\u0441\\u0447\\u0435\\u0442 \\u043A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          className: \"logo\",\n          src: Logotip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), user.isAuth ? /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto \",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"main\",\n            id: \"d3\",\n            variant: \"outline-light\",\n            onClick: () => history.push(USER_ROUTE + '/' + decodedData.id),\n            children: \"\\u041A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"main\",\n            id: \"d4\",\n            variant: \"outline-light\",\n            onClick: () => user.setIsAuth(false),\n            children: \"\\u0412\\u044B\\u0445\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"main\",\n            id: \"d5\",\n            variant: \"outline-light\",\n            onClick: () => history.push(LOGIN_ROUTE),\n            children: \"\\u0412\\u0445\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"textlogo\",\n        children: \" \\u041A\\u043D\\u0438\\u0433\\u0430 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u043E\\u0432 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"navbar2\",\n      children: recipe.types.map(type => /*#__PURE__*/_jsxDEV(Button, {\n        className: type.id <= 5 ? 'type' : 'type1',\n        variant: \"outline-light\",\n        style: {\n          cursor: 'pointer'\n        },\n        active: type.id === recipe.selectedType.id,\n        onClick: () => history.push(TYPE_ROUTE) + '/' + type.id,\n        children: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"zC5cU3mwoRLY3y4gA2+jth9y9QY=\", false, function () {\n  return [useHistory];\n}));\n_c2 = NavBar;\nexport default NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar$observer\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/components/NavBar.js"],"names":["React","useContext","useEffect","Context","Navbar","Nav","CALORIES_ROUTE","LOGIN_ROUTE","MAIN_ROUTE","TYPE_ROUTE","USER_ROUTE","useHistory","Button","Container","Image","observer","Logotip","fetchTypes","jwt_decode","NavBar","user","history","recipe","then","data","setTypes","storedToken","localStorage","getItem","decodedData","push","isAuth","id","setIsAuth","types","map","type","cursor","selectedType","name"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport {Context} from \"../index\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {CALORIES_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, TYPE_ROUTE, USER_ROUTE } from '../utils/consts';\r\nimport { useHistory} from 'react-router-dom';\r\nimport {Button, Container, Image} from \"react-bootstrap\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport Logotip from \"../assets/Logotip.png\";\r\nimport \"../css.css\"\r\nimport { fetchTypes } from '../http/typeAPI';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n    const{recipe} = useContext(Context)\r\n    useEffect(() =>{\r\n        fetchTypes().then(data => recipe.setTypes(data))\r\n    },[])\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <Navbar variant=\"dark\" className=\"navbar\">\r\n            <Container className=\"d-flex justify-content-center align-items-center\">\r\n            <Nav className=\"ml-auto\">\r\n                <Button className=\"main\" id=\"d1\" variant={\"outline-light\"} onClick={() => history.push(MAIN_ROUTE)} >Главная</Button>\r\n                <Button className=\"main\" id=\"d2\" variant={\"outline-light\"} onClick={() => history.push(CALORIES_ROUTE)} >Подсчет калорий</Button>\r\n                <Image className=\"logo\" src={Logotip}/>\r\n                {user.isAuth?\r\n                <Nav className=\"ml-auto \">\r\n                    <Button className=\"main\" id=\"d3\" variant={\"outline-light\"} onClick={()=> history.push(USER_ROUTE+'/'+decodedData.id)}>Кабинет</Button>\r\n                    <Button className=\"main\" id=\"d4\" variant={\"outline-light\"} onClick={() => user.setIsAuth(false)}>Выход</Button>\r\n                </Nav>\r\n                    :\r\n                <Nav className=\"ml-auto\">\r\n                    <Button className=\"main\" id=\"d5\" variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Вход</Button>\r\n                </Nav>\r\n                }\r\n                \r\n            </Nav>\r\n            <h2 className=\"textlogo\"> Книга рецептов </h2>\r\n        \r\n        </Container>\r\n        <Container className=\"navbar2\">\r\n        {recipe.types.map(type =>\r\n                <Button \r\n                    className={type.id <= 5 ? 'type' : 'type1'}\r\n                    variant={\"outline-light\"}\r\n                    style={{cursor:'pointer'}}\r\n                    active={type.id === recipe.selectedType.id}\r\n                    onClick={()=> history.push(TYPE_ROUTE)+'/'+type.id}\r\n                    key={type.id}\r\n                >\r\n                        {type.name}\r\n                </Button>\r\n            )}\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n})\r\n\r\nexport default NavBar"]},"metadata":{},"sourceType":"module"}