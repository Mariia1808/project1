{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\pages\\\\RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from \"../index\";\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport star from '../assets/Layer.png';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { fetchOneRecipe } from '../http/recipeAPI';\nimport { fetchTypes } from '../http/typeAPI';\nimport { fetchRecipekcals } from '../http/productAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipePage = observer(_c = _s(() => {\n  _s();\n\n  const history = useHistory();\n  const [recipes, setRecipe] = useState({\n    info: []\n  });\n  const {\n    recipe,\n    products\n  } = useContext(Context);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchOneRecipe(id).then(data => setRecipe(data.rows));\n    fetchTypes().then(data => recipe.setTypes(data));\n    fetchRecipekcals().then(data => recipe.setRecipekcals(data.rows));\n  }, []);\n  console.log(recipe);\n  const proportion = [{\n    id: 1,\n    kolvo: 150,\n    recipeId: 1,\n    productId: 4\n  }, {\n    id: 2,\n    kolvo: 147,\n    recipeId: 1,\n    productId: 8\n  }, {\n    id: 3,\n    kolvo: 230,\n    recipeId: 1,\n    productId: 1\n  }, {\n    id: 4,\n    kolvo: 120,\n    recipeId: 1,\n    productId: 16\n  }]; // const type=[]\n  //const user={id:1, name:'Петр', last_name:'Иванов', phone: '89225689674', email: 'user@dfgh.com', password:'tcfyvgu'}\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        className: \"photo\",\n        width: 300,\n        height: 300,\n        src: recipe.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"namerec1\",\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"raterec\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"text\", {\n            children: recipe.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            width: 20,\n            height: 20,\n            src: star\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 75\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"descript_mini\",\n          children: recipe.profile_mini\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xar\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textinfo\",\n            children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\", recipe.types.map(items => {\n              if (items.id === parseInt(recipe.typeId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"infotext\",\n                children: [\" \", items.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 36\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textinfo\",\n            children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\", /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"infotext\",\n              children: recipe.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"col2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"textinfo\",\n              children: [\"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\", /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"infotext\",\n                children: recipe.complex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"textinfo\",\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438\", recipe.recipekcals.map(recipekcals => {\n                if (recipe.id === parseInt(recipekcals.recipeId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: \"infotext\",\n                  children: [\" \", recipekcals.kcal]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 36\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decriptrec\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"spisok\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product1\",\n          children: proportion.map(proportion => {\n            if (recipe.id === parseInt(proportion.recipeId)) return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"kolvo\",\n              children: products.map(products => {\n                if (products.id === proportion.productId) return /*#__PURE__*/_jsxDEV(\"text\", {\n                  className: \"prodtext\",\n                  children: [products.name, \":\\u2003\\u2003\\u2003\\u2003 \", proportion.kolvo, \" \\u0433\\u0440\\u0430\\u043C\\u043C\"]\n                }, products.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 94\n                }, this);\n              })\n            }, proportion.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 44\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calor\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"spisok\",\n          children: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spcal\",\n          children: recipe.recipekcals.map(recipekcal => {\n            if (recipe.id === parseInt(recipekcal.recipeId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438 \\u2003\\u2003\\u2003\\u2003 \", recipekcal.kcal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 67\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u0411\\u0435\\u043B\\u043A\\u0438 \\u2003\\u2003\\u2003\\u2003 \", recipekcal.protein]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u0416\\u0438\\u0440\\u044B \\u2003\\u2003\\u2003\\u2003 \", recipekcal.fat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B \\u2003\\u2003\\u2003\\u2003 \", recipekcal.carb]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"steps\",\n          children: \"\\u042D\\u0442\\u0430\\u043F\\u044B \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: recipe.profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prtype\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}, \"ys2/l/s4qi8ZKy/qo07FmeFUiGc=\", false, function () {\n  return [useHistory, useParams];\n}));\n_c2 = RecipePage;\nexport default RecipePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecipePage$observer\");\n$RefreshReg$(_c2, \"RecipePage\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/pages/RecipePage.js"],"names":["React","useContext","useEffect","useState","Context","Container","Row","Col","Image","star","useHistory","useParams","observer","fetchOneRecipe","fetchTypes","fetchRecipekcals","RecipePage","history","recipes","setRecipe","info","recipe","products","id","then","data","rows","setTypes","setRecipekcals","console","log","proportion","kolvo","recipeId","productId","img","name","rating","profile_mini","types","map","items","parseInt","typeId","time","complex","recipekcals","kcal","recipekcal","protein","fat","carb","profile"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport star from '../assets/Layer.png';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchOneRecipe } from '../http/recipeAPI';\r\nimport { fetchTypes } from '../http/typeAPI';\r\nimport { fetchRecipekcals } from '../http/productAPI';\r\n\r\n\r\n\r\nconst RecipePage = observer(() => {\r\n    const history = useHistory()\r\n    const [recipes, setRecipe] = useState({info:[]})\r\n    const {recipe, products} = useContext(Context)\r\n    const {id} = useParams()\r\n    \r\n    useEffect(()=>{\r\n        fetchOneRecipe(id).then(data => setRecipe(data.rows))\r\n        fetchTypes().then(data => recipe.setTypes(data))\r\n        fetchRecipekcals().then(data => recipe.setRecipekcals(data.rows))\r\n    },[])\r\n\r\n    console.log(recipe)\r\n\r\n\r\n    const proportion = [{id:1, kolvo:150, recipeId: 1, productId: 4},\r\n        {id:2, kolvo:147, recipeId: 1, productId: 8},\r\n        {id:3, kolvo:230, recipeId: 1, productId: 1},\r\n        {id:4, kolvo:120, recipeId: 1, productId: 16}]\r\n    // const type=[]\r\n    \r\n    \r\n    //const user={id:1, name:'Петр', last_name:'Иванов', phone: '89225689674', email: 'user@dfgh.com', password:'tcfyvgu'}\r\n        return (\r\n            <Container\r\n            className=\"tbody\">\r\n                    <div>\r\n                    <Image className=\"photo\" width={300} height={300} src={recipe.img}/>\r\n                    <div className=\"info\">\r\n                    <h2 className=\"namerec1\">{recipe.name}</h2>\r\n                    <div className=\"raterec\"> <text>{recipe.rating}</text><img width={20} height={20} src={star}/> </div>\r\n                    <text className=\"descript_mini\">{recipe.profile_mini}</text>\r\n                    \r\n                    <div className=\"xar\">\r\n                    <p className=\"textinfo\">Категория\r\n                    {recipe.types.map(items => {\r\n                        if (items.id === parseInt(recipe.typeId))\r\n                            return <text className=\"infotext\"> {items.name}</text>\r\n                    })}</p>\r\n                    \r\n                    <p className=\"textinfo\">Время приготовления\r\n                    <text className=\"infotext\">{recipe.time}</text></p>\r\n                    <div id=\"col2\">\r\n                    <p className=\"textinfo\">Сложность\r\n                    <text className=\"infotext\" >{recipe.complex}</text></p>\r\n                    \r\n                    <p className=\"textinfo\">Калории  \r\n                    {recipe.recipekcals.map(recipekcals => {\r\n                        if (recipe.id === parseInt(recipekcals.recipeId))\r\n                            return <text className=\"infotext\"> {recipekcals.kcal}</text>\r\n                    })}</p>                    \r\n                    </div></div></div>\r\n\r\n                    <div className=\"decriptrec\">\r\n                        <p className='spisok'>Список продуктов</p>\r\n                        <div className=\"product1\">\r\n                            {proportion.map(proportion => {\r\n                                if (recipe.id === parseInt(proportion.recipeId))\r\n                                    return <p className=\"kolvo\" key={proportion.id}>\r\n                                        {products.map(products => {\r\n                                            if (products.id === proportion.productId) return <text className=\"prodtext\" key={products.id}>{products.name}:&emsp;&emsp;&emsp;&emsp; {proportion.kolvo} грамм</text> \r\n                                        }\r\n                                    )}\r\n                                    </p>\r\n                            }\r\n                        )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"calor\">\r\n                        <p className='spisok'>Калории</p>\r\n                            <div className=\"spcal\">\r\n                                {recipe.recipekcals.map(recipekcal => {\r\n                                    if(recipe.id === parseInt(recipekcal.recipeId))\r\n                                        return <text className=\"\"><p>Калории &emsp;&emsp;&emsp;&emsp; {recipekcal.kcal}</p>\r\n                            <p>Белки &emsp;&emsp;&emsp;&emsp; {recipekcal.protein}</p>\r\n                            <p>Жиры &emsp;&emsp;&emsp;&emsp; {recipekcal.fat}</p>\r\n                            <p>Углеводы &emsp;&emsp;&emsp;&emsp; {recipekcal.carb}</p>\r\n                            </text>\r\n                        \r\n                    })}\r\n                    </div></div>\r\n                    <div className=\"step\">\r\n                    <h2 className=\"steps\">Этапы приготовления</h2>\r\n                    <text>{recipe.profile}</text>\r\n                    </div>\r\n                </div>\r\n            <div className=\"prtype\"></div>\r\n            </Container>\r\n        );\r\n    \r\n});\r\n\r\nexport default RecipePage;"]},"metadata":{},"sourceType":"module"}