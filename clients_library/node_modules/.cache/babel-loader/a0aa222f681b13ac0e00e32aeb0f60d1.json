{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\modals\\\\CreateRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Button, Dropdown, Form, Col, Row, Card, Container } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport jwt_decode from \"jwt-decode\";\nimport '../css.css';\nimport { fetchProducts, fetchProportions } from '../http/productAPI';\nimport { fetchRecipes } from '../http/recipeAPI';\nimport { fetchTypes } from '../http/typeAPI';\nimport { fetchUser } from '../http/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateRecipe = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const {\n    recipe,\n    user\n  } = useContext(Context);\n  const [info, setInfo] = useState([]);\n\n  const addInfo = () => {\n    setInfo([...info, {\n      kolvo: '',\n      productId: '',\n      number: Date.now()\n    }]);\n  };\n\n  const removeInfo = number => {\n    setInfo(info.filter(i => i.number !== number));\n  };\n\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map(i => i.number === number ? { ...i,\n      [key]: value\n    } : i));\n  };\n\n  const selectFile = e => {\n    setFile(e.target.files[0]);\n  }; // //const kcal = 0\n  // useEffect(() => {\n  //     fetchProducts().then(data => recipe.setProducts(data))\n  //     fetchTypes().then(data => recipe.setTypes(data))\n  //     //fetchUser().then(data => recipe.setUser(data))\n  // }, [recipe])\n\n\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState(''); //const [typeId, setTypeId] = useState('')\n\n  const [complex, setComplex] = useState('');\n  const [time, setTime] = useState('');\n  const [file, setFile] = useState(null);\n  const [profile_mini, setProfile_mini] = useState('');\n  const [profile, setProfile] = useState('');\n  const [kcal, setKcal] = useState('');\n  const [protein, setProtein] = useState('');\n  const [carb, setCarb] = useState('');\n  const [fat, setFat] = useState('');\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n\n  const addRecipe = () => {\n    const formData = new formData();\n    formData.append('name', name);\n    formData.append('time', time);\n    formData.append('complex', complex);\n    formData.append('profile_mini', profile_mini);\n    formData.append('profile', profile);\n    formData.append('img', name);\n    formData.append('kcal', kcal);\n    formData.append('protein', protein);\n    formData.append('fat', fat);\n    formData.append('carb', carb);\n    formData.append('typeId', recipe.selectedType.id);\n    formData.append('userId', decodedData.id);\n    formData.append('info', JSON.stringify(info));\n    createRecipe(formData).then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Введите название рецепта\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              children: recipe.selectedType.name || \"Выберите тип\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: recipe.types.map(type => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => recipe.setSelectedType(type),\n                children: type.name\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            defaultValue: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F...\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: '15',\n              onChange: e => setComplex(e.target.value),\n              children: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"45\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            defaultValue: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C...\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"\\u041B\\u0435\\u0433\\u043A\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: profile_mini,\n            onChange: e => setProfile_mini(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            type: \"multiline\",\n            value: profile,\n            onChange: e => setProfile(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            type: \"file\",\n            onChange: selectFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addInfo,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), info.map(i => /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n                children: recipe.products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: product.id,\n                  onChange: e => changeInfo('productId', e.target.value, i.number),\n                  children: product.name\n                }, product.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: i.kolvo,\n                onChange: e => changeInfo('kolvo', e.target.value, i.number),\n                placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => removeInfo(i.number),\n                variant: \"outline-danger\",\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, i.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: kcal,\n            onChange: e => setKcal(e.target.value),\n            placeholder: \"\\u041A\\u0430\\u043B\\u043B\\u043E\\u0440\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: protein,\n            onChange: e => setProtein(e.target.value),\n            placeholder: \"\\u0411\\u0435\\u043B\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: fat,\n            onChange: e => setFat(e.target.value),\n            placeholder: \"\\u0416\\u0438\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: carb,\n            onChange: e => setCarb(e.target.value),\n            placeholder: \"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: addRecipe,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRecipe, \"CzbzBdl2NmbE8Nk2l4k6TuISSbw=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateRecipe;\nexport default CreateRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/modals/CreateRecipe.js"],"names":["React","useContext","useEffect","useState","useParams","Button","Dropdown","Form","Col","Row","Card","Container","Modal","Context","jwt_decode","fetchProducts","fetchProportions","fetchRecipes","fetchTypes","fetchUser","CreateRecipe","show","onHide","recipe","user","info","setInfo","addInfo","kolvo","productId","number","Date","now","removeInfo","filter","i","changeInfo","key","value","map","selectFile","e","setFile","target","files","id","name","setName","complex","setComplex","time","setTime","file","profile_mini","setProfile_mini","profile","setProfile","kcal","setKcal","protein","setProtein","carb","setCarb","fat","setFat","storedToken","localStorage","getItem","decodedData","addRecipe","formData","append","selectedType","JSON","stringify","createRecipe","then","types","type","setSelectedType","products","product"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {Button, Dropdown, Form, Col,Row, Card, Container} from \"react-bootstrap\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport {Context} from \"../index\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport '../css.css';\r\nimport { fetchProducts, fetchProportions } from '../http/productAPI';\r\nimport { fetchRecipes } from '../http/recipeAPI';\r\nimport { fetchTypes } from '../http/typeAPI';\r\nimport { fetchUser } from '../http/userAPI';\r\n\r\n\r\nconst CreateRecipe = ({show, onHide}) => {\r\n    const {recipe, user} = useContext(Context)\r\n   \r\n    const [info, setInfo] = useState([])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {kolvo:'', productId:'', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    // //const kcal = 0\r\n    // useEffect(() => {\r\n    //     fetchProducts().then(data => recipe.setProducts(data))\r\n    //     fetchTypes().then(data => recipe.setTypes(data))\r\n    //     //fetchUser().then(data => recipe.setUser(data))\r\n    // }, [recipe])\r\n    const {id} = useParams()\r\n    const [name, setName] = useState('')\r\n    //const [typeId, setTypeId] = useState('')\r\n    const [complex, setComplex] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [file, setFile] = useState(null)\r\n    const [profile_mini, setProfile_mini] = useState('')\r\n    const [profile, setProfile] = useState('')\r\n    const [kcal, setKcal] = useState('')\r\n    const [protein, setProtein] = useState('')\r\n    const [carb, setCarb] = useState('')\r\n    const [fat, setFat] = useState('')\r\n    \r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    const addRecipe = () =>{\r\n        const formData = new formData()\r\n        formData.append('name', name)\r\n        formData.append('time', time)\r\n        formData.append('complex', complex)\r\n        formData.append('profile_mini', profile_mini)\r\n        formData.append('profile', profile)\r\n        formData.append('img', name)\r\n        formData.append('kcal', kcal)\r\n        formData.append('protein', protein)\r\n        formData.append('fat', fat)\r\n        formData.append('carb', carb)\r\n        formData.append('typeId', recipe.selectedType.id)\r\n        formData.append('userId', decodedData.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createRecipe(formData).then()\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        \r\n        <Modal \r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered>\r\n        <Container className=\"form\">\r\n        <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Добавление рецепта\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Control value={name} onChange={e => setName(e.target.value)} placeholder={\"Введите название рецепта\"}/>\r\n{/*                \r\n                <Form.Control as=\"select\" value={typeId} \r\n                onChange={e => setTypeId(e.target.value)} defaultValue=\"Тип блюда...\">\r\n                        {recipe.types.map(type =>\r\n                            <option value={type.id}>{type.name}</option> \r\n                             \r\n                        )}\r\n                </Form.Control>\r\n                \r\n                 */}\r\n\r\n                <Dropdown>\r\n                        <Dropdown.Toggle>{recipe.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {recipe.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => recipe.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n\r\n\r\n\r\n                <Form.Control as=\"select\" defaultValue=\"Время приготовления...\">\r\n                        <option value={'15'} onChange={e => setComplex(e.target.value)}>15</option>\r\n                        <option>30</option>\r\n                        <option>45</option>\r\n                        <option>60</option>  \r\n                </Form.Control>\r\n                \r\n                <Form.Control as=\"select\" defaultValue=\"Сложность...\">\r\n                <option>Легко</option>\r\n                <option>Средне</option>\r\n                <option>Сложно</option>  \r\n                </Form.Control>\r\n\r\n                    <Form.Control className=\"mt-3\" value={profile_mini} onChange={e => setProfile_mini(e.target.value)} placeholder=\"Введите краткое описание рецепта\"/>\r\n                <Form.Control className=\"mt-3\" type=\"multiline\" value={profile} onChange={e => setProfile(e.target.value)} placeholder=\"Введите рецепт\"/>\r\n                <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile}/>\r\n                            <hr/>\r\n\r\n\r\n                <Button\r\n                onClick={addInfo}\r\n                >Добавить продукт</Button>\r\n                {\r\n                    info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                            <Form.Control as=\"select\" defaultValue=\"Продукт...\">\r\n                            {recipe.products.map(product =>\r\n                                <option value={product.id} key={product.id} onChange={(e) => changeInfo('productId', e.target.value, i.number)}>{product.name}</option> \r\n                                  \r\n                            )}\r\n                            </Form.Control></Col>\r\n                            <Col md={4}>\r\n                            \r\n                                <Form.Control value={i.kolvo} onChange={(e) => changeInfo('kolvo', e.target.value, i.number)} placeholder=\"Количество\"/>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button onClick={() => removeInfo(i.number)} variant={\"outline-danger\"}>Удалить</Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )\r\n                }\r\n              \r\n                 <hr/>\r\n                 <Form.Control className=\"mt-3\" value={kcal} onChange={e => setKcal(e.target.value)} placeholder=\"Каллории\" />\r\n                 <Form.Control className=\"mt-3\" value={protein} onChange={e => setProtein(e.target.value)} placeholder=\"Белки\"/>\r\n                 <Form.Control className=\"mt-3\" value={fat} onChange={e => setFat(e.target.value)} placeholder=\"Жиры\"/>\r\n                 <Form.Control className=\"mt-3\" value={carb} onChange={e => setCarb(e.target.value)} placeholder=\"Углеводы\"/>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button className=\"recbut\" onClick={onHide}>Рассчитать</Button>\r\n            <Button className=\"recbut\" onClick={onHide}>Закрыть</Button>\r\n            <Button className=\"recbut\" onClick={addRecipe}>Добавить</Button>\r\n        </Modal.Footer>\r\n        </Container></Modal>\r\n    );\r\n  }\r\n  \r\nexport default CreateRecipe;"]},"metadata":{},"sourceType":"module"}