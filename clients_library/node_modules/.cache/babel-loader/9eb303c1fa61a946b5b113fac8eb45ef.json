{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\modals\\\\createProportion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button, Form, Col, Row, Card, Container } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport '../css.css';\nimport { createProportion } from '../http/productAPI';\nimport { fetchOneUser } from '../http/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateProportion = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [kolvo, setKolvo] = useState('');\n  const [recipeId, setrecipeId] = useState('');\n  const [productId, setproductId] = useState('');\n  const {\n    user\n  } = useContext();\n  const [users, setUsers] = useState({\n    info: []\n  });\n  useEffect(() => {\n    fetchOneUser(id).then(data => setUsers(data));\n  });\n\n  const addProportion = () => {\n    const formData = new FormData();\n    formData.append('kolvo', kolvo);\n    formData.append('recipeId', recipeId);\n    formData.append('productId', productId);\n    createProportion(formData).then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u043F\\u043E\\u0440\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: productId,\n              onChange: e => setproductId('productId', e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: user.recipes.map(recipe => {\n                if (users.id === parseInt(recipe.userId)) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: recipe.id,\n                  children: recipe.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: productId,\n              onChange: e => setproductId('productId', e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: recipe.products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: product.id,\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Введите название рецепта\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: kcal,\n            onChange: e => setKcal(e.target.value),\n            className: \"mt-3\",\n            placeholder: \"\\u041A\\u0430\\u043B\\u043B\\u043E\\u0440\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: protein,\n            onChange: e => setProtein(e.target.value),\n            className: \"mt-3\",\n            placeholder: \"\\u0411\\u0435\\u043B\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: fat,\n            onChange: e => setFat(e.target.value),\n            className: \"mt-3\",\n            placeholder: \"\\u0416\\u0438\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: carb,\n            onChange: e => setCarb(e.target.value),\n            className: \"mt-3\",\n            placeholder: \"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: addProportion,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateProportion, \"TJ7h9dp3rm46JUWwdcfSPysIOm4=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateProportion;\nexport default CreateProportion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProportion\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/modals/createProportion.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","Button","Form","Col","Row","Card","Container","Modal","Context","createProportion","fetchOneUser","CreateProportion","show","onHide","id","kolvo","setKolvo","recipeId","setrecipeId","productId","setproductId","user","users","setUsers","info","then","data","addProportion","formData","FormData","append","e","target","value","recipes","map","recipe","parseInt","userId","name","products","product","setName","kcal","setKcal","protein","setProtein","fat","setFat","carb","setCarb"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Button, Form, Col,Row, Card, Container} from \"react-bootstrap\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport {Context} from \"../index\";\r\nimport '../css.css';\r\nimport {createProportion } from '../http/productAPI';\r\nimport { fetchOneUser } from '../http/userAPI';\r\n\r\n\r\n\r\nconst CreateProportion = ({show, onHide}) => {\r\n    \r\n    const {id} = useParams()\r\n    const [kolvo, setKolvo] = useState('')\r\n    const [recipeId, setrecipeId] = useState('')\r\n    const [productId, setproductId] = useState('')\r\n    const {user}=useContext()\r\n    const [users, setUsers] = useState({info:[]})\r\n   \r\n    useEffect(() => {\r\n        fetchOneUser(id).then(data => setUsers(data))\r\n    })\r\n\r\n    const addProportion = () =>{\r\n        const formData= new FormData()\r\n        formData.append('kolvo', kolvo)\r\n        formData.append('recipeId', recipeId)\r\n        formData.append('productId', productId)\r\n        createProportion(formData).then()\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Modal \r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered>\r\n        <Container className=\"form\">\r\n        <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Добавление пропорций\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n            \r\n            <Col md={4}>\r\n            <Form.Control as=\"select\" value={productId}  onChange={(e) => setproductId('productId', e.target.value)} defaultValue=\"Продукт...\">\r\n                {user.recipes.map(recipe =>{\r\n                if(users.id === parseInt(recipe.userId))\r\n                return <option value={recipe.id}>{recipe.name}</option> \r\n                    })}\r\n                    </Form.Control></Col>\r\n\r\n                <Col md={4}>\r\n                    <Form.Control as=\"select\" value={productId}  onChange={(e) => setproductId('productId', e.target.value)} defaultValue=\"Продукт...\">\r\n                    {recipe.products.map(product =>\r\n                        <option value={product.id}>{product.name}</option> \r\n                        )}\r\n                    </Form.Control></Col>\r\n                  \r\n\r\n\r\n                <Form.Control value={name} onChange={e => setName(e.target.value)} placeholder={\"Введите название рецепта\"}/>\r\n                <Form.Control value={kcal} onChange={e => setKcal(e.target.value)} className=\"mt-3\" placeholder=\"Каллории\" />\r\n                <Form.Control value={protein} onChange={e => setProtein(e.target.value)} className=\"mt-3\" placeholder=\"Белки\"/>\r\n                <Form.Control value={fat} onChange={e => setFat(e.target.value)} className=\"mt-3\" placeholder=\"Жиры\"/>\r\n                <Form.Control value={carb} onChange={e => setCarb(e.target.value)} className=\"mt-3\" placeholder=\"Углеводы\"/>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button className=\"recbut\" onClick={onHide}>Закрыть</Button>\r\n            <Button className=\"recbut\" onClick={addProportion}>Добавить</Button>\r\n        </Modal.Footer>\r\n        </Container></Modal>\r\n    );\r\n  }\r\n  \r\nexport default CreateProportion;"]},"metadata":{},"sourceType":"module"}