{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\modals\\\\DeleteProportion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button, Form, Col, Row, Card, Container } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport '../css.css';\nimport jwt_decode from \"jwt-decode\";\nimport { updateProportion, deleteProportion, fetchProducts, fetchProportions } from '../http/productAPI';\nimport { fetchOneUser } from '../http/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteAndUpdateProportion = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [kolvo, setKolvo] = useState('');\n  const [Prop, SetProp] = useState('');\n  const [recipeId, setrecipeId] = useState('');\n  const [productId, setproductId] = useState('');\n  const {\n    user,\n    recipe\n  } = useContext(Context);\n  const [users, setUsers] = useState({\n    info: []\n  });\n  useEffect(() => {\n    //fetchOneUser(id).then(data => setUsers(data))\n    fetchProducts().then(data => recipe.setProducts(data));\n    fetchProportions().then(data => recipe.setProportions(data));\n  });\n\n  const delProportion = () => {\n    deleteProportion(Prop).then();\n  };\n\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u043F\\u043E\\u0440\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [decodedData.id, /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: recipeId,\n              onChange: e => setrecipeId(e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: user.recipes.map(recipe => {\n                if (parseInt(decodedData.id) === parseInt(recipe.userId)) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: recipe.id,\n                  children: recipe.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), recipeId, recipe.proportions.map(proportion => {\n            if (parseInt(recipeId) === parseInt(proportion.recipeId)) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: recipe.products.map(product => {\n                if (product.id === proportion.productId) return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  value: proportion.id,\n                  onChange: e => SetProp(e.target.value),\n                  label: `${product.name}: ${proportion.kolvo} грамм`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 28\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: delProportion,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteAndUpdateProportion, \"Y0XaYgDPz3Pl/sKVnldWj9BZAq8=\", false, function () {\n  return [useParams];\n});\n\n_c = DeleteAndUpdateProportion;\nexport default DeleteAndUpdateProportion;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAndUpdateProportion\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/modals/DeleteProportion.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","Button","Form","Col","Row","Card","Container","Modal","Context","jwt_decode","updateProportion","deleteProportion","fetchProducts","fetchProportions","fetchOneUser","DeleteAndUpdateProportion","show","onHide","id","kolvo","setKolvo","Prop","SetProp","recipeId","setrecipeId","productId","setproductId","user","recipe","users","setUsers","info","then","data","setProducts","setProportions","delProportion","storedToken","localStorage","getItem","decodedData","e","target","value","recipes","map","parseInt","userId","name","proportions","proportion","products","product"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Button, Form, Col,Row, Card, Container} from \"react-bootstrap\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport {Context} from \"../index\";\r\nimport '../css.css';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {updateProportion, deleteProportion, fetchProducts, fetchProportions } from '../http/productAPI';\r\nimport { fetchOneUser } from '../http/userAPI';\r\n\r\n\r\n\r\nconst DeleteAndUpdateProportion = ({show, onHide}) => {\r\n    \r\n    const {id} = useParams()\r\n    const [kolvo, setKolvo] = useState('')\r\n    const [Prop, SetProp] = useState('')\r\n    const [recipeId, setrecipeId] = useState('')\r\n    const [productId, setproductId] = useState('')\r\n    const {user, recipe}=useContext(Context)\r\n    const [users, setUsers] = useState({info:[]})\r\n   \r\n    useEffect(() => {\r\n        //fetchOneUser(id).then(data => setUsers(data))\r\n        fetchProducts().then(data => recipe.setProducts(data))\r\n        fetchProportions().then(data => recipe.setProportions(data))\r\n    })\r\n\r\n    const delProportion = () =>{\r\n        deleteProportion(Prop).then()\r\n    }\r\n    \r\n  \r\n   \r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    return (\r\n        \r\n        <Modal \r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered>\r\n        <Container className=\"form\">\r\n        <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Удаление пропорций\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n            {decodedData.id}\r\n            <Col md={4}>\r\n            <Form.Control as=\"select\" value={recipeId}  onChange={(e) => setrecipeId(e.target.value)} defaultValue=\"Продукт...\">\r\n                {user.recipes.map(recipe =>{\r\n                if(parseInt(decodedData.id) === parseInt(recipe.userId))\r\n                return <option value={recipe.id}>{recipe.name}</option> \r\n                    })}\r\n                    </Form.Control></Col>\r\n\r\n                {recipeId}\r\n\r\n\r\n                {recipe.proportions.map(proportion => {\r\n                    if (parseInt(recipeId) === parseInt(proportion.recipeId))\r\n                    return <p>{recipe.products.map(product => {\r\n                        if (product.id === proportion.productId)\r\n                        return <Form.Check type=\"radio\" value={proportion.id} onChange={(e) => SetProp(e.target.value)} label={`${product.name}: ${proportion.kolvo} грамм`}/> \r\n                            }\r\n                        )}</p>\r\n                    }\r\n                )}\r\n\r\n               \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button className=\"recbut\" onClick={onHide}>Закрыть</Button>\r\n            <Button className=\"recbut\" onClick={delProportion}>Удалить</Button>\r\n        </Modal.Footer>\r\n        </Container></Modal>\r\n    );\r\n  }\r\n  \r\nexport default DeleteAndUpdateProportion;"]},"metadata":{},"sourceType":"module"}