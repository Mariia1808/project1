{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\components\\\\NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Context } from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { CALORIES_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, USER_ROUTE } from '../utils/consts';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Container, Image } from \"react-bootstrap\";\nimport { observer } from 'mobx-react-lite';\nimport Logotip from \"../assets/Logotip.png\";\nimport \"../css.css\";\nimport { fetchTypes } from '../http/typeAPI';\nimport jwt_decode from \"jwt-decode\";\nimport { login, registration, registration1 } from \"../http/userAPI\";\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"225202864346-k01k8j33vmutqn1nn0hforpo2alvv8va.apps.googleusercontent.com\";\nconst NavBar = observer(_c = _s(() => {\n  _s();\n\n  const history = useHistory();\n  const {\n    recipe\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => recipe.setTypes(data));\n  }, []);\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  const [loading, setLoading] = useState('Loading...');\n  const [users, setUser] = useState(null);\n  const {\n    user\n  } = useContext(Context);\n  let data;\n\n  const handleLoginSuccess = response => {\n    console.log(\"Login Success \", response);\n    setUser(response.profileObj);\n    proverka(users);\n    setLoading();\n  };\n\n  const proverka = users => {\n    let data;\n    {\n      user.users.map(item => {\n        if (item.email === users.profileObj.email) {\n          data = login(users.profileObj.email, users.tokenId);\n          console.log(data);\n          user.setUser(user);\n          user.setIsAuth(true);\n        } else {\n          data = registration1(users.profileObj.name, users.profileObj.email, users.tokenId);\n          console.log(data);\n          user.setUser(user);\n          user.setIsAuth(true);\n        }\n      });\n    }\n    console.log(user);\n    console.log(users);\n  };\n\n  const handleLoginFailure = error => {\n    console.log(\"Login Failure \", error);\n    setLoading();\n  };\n\n  const handleLogoutSuccess = response => {\n    console.log(\"Logout Success \", response);\n    setUser(null);\n  };\n\n  const handleLogoutFailure = error => {\n    console.log(\"Logout Failure \", error);\n  };\n\n  const handleRequest = () => {\n    setLoading(\"Loading...\");\n  };\n\n  const handleAutoLoadFinished = () => {\n    setLoading();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    variant: \"dark\",\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ml-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"main\",\n          id: \"d1\",\n          variant: \"outline-light\",\n          onClick: () => history.push(MAIN_ROUTE),\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"main\",\n          id: \"d2\",\n          variant: \"outline-light\",\n          onClick: () => history.push(CALORIES_ROUTE),\n          children: \"\\u041F\\u043E\\u0434\\u0441\\u0447\\u0435\\u0442 \\u043A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          className: \"logo\",\n          src: Logotip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), users ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: [\"Welcome \", users.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"main\",\n            id: \"d3\",\n            variant: \"outline-light\",\n            onClick: () => history.push(USER_ROUTE + '/' + decodedData.id),\n            children: \"\\u041A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n            clientId: clientId,\n            onLogoutSuccess: handleLogoutSuccess,\n            onFailure: handleLogoutFailure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(users, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: clientId,\n          buttonText: loading,\n          onSuccess: handleLoginSuccess,\n          onFailure: handleLoginFailure,\n          onRequest: handleRequest,\n          onAutoLoadFinished: handleAutoLoadFinished,\n          isSignedIn: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"textlogo\",\n        children: \" \\u041A\\u043D\\u0438\\u0433\\u0430 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u043E\\u0432 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"navbar2\",\n      children: recipe.types.map(type => /*#__PURE__*/_jsxDEV(Button, {\n        className: type.id <= 5 ? 'type' : 'type1',\n        variant: \"outline-light\",\n        style: {\n          cursor: 'pointer'\n        },\n        active: type.id === recipe.selectedType.id,\n        onClick: () => recipe.setSelectedType(type),\n        children: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}, \"tYIA/ir4aEJwtjeJj2+KbGXoQhA=\", false, function () {\n  return [useHistory];\n}));\n_c2 = NavBar;\nexport default NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar$observer\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/components/NavBar.js"],"names":["React","useContext","useState","useEffect","Context","Navbar","Nav","CALORIES_ROUTE","LOGIN_ROUTE","MAIN_ROUTE","USER_ROUTE","useHistory","Button","Container","Image","observer","Logotip","fetchTypes","jwt_decode","login","registration","registration1","GoogleLogin","GoogleLogout","clientId","NavBar","history","recipe","then","data","setTypes","storedToken","localStorage","getItem","decodedData","loading","setLoading","users","setUser","user","handleLoginSuccess","response","console","log","profileObj","proverka","map","item","email","tokenId","setIsAuth","name","handleLoginFailure","error","handleLogoutSuccess","handleLogoutFailure","handleRequest","handleAutoLoadFinished","push","id","JSON","stringify","types","type","cursor","selectedType","setSelectedType"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport {Context} from \"../index\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {CALORIES_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, USER_ROUTE } from '../utils/consts';\r\nimport { useHistory} from 'react-router-dom';\r\nimport {Button, Container, Image} from \"react-bootstrap\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport Logotip from \"../assets/Logotip.png\";\r\nimport \"../css.css\"\r\nimport { fetchTypes } from '../http/typeAPI';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {login, registration, registration1} from \"../http/userAPI\";\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nconst clientId = \"225202864346-k01k8j33vmutqn1nn0hforpo2alvv8va.apps.googleusercontent.com\"\r\n\r\nconst NavBar = observer(() => {\r\n    \r\n    const history = useHistory()\r\n    const{recipe} = useContext(Context)\r\n    useEffect(() =>{\r\n        fetchTypes().then(data => recipe.setTypes(data))\r\n    },[])\r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    const [loading, setLoading] = useState('Loading...');\r\n    const [users, setUser] = useState(null);\r\n   const {user} = useContext(Context)\r\n   let data\r\n    const handleLoginSuccess = (response) => {\r\n      console.log(\"Login Success \", response);\r\n      setUser(response.profileObj);\r\n      proverka(users)\r\n     \r\n        \r\n \r\n    \r\n      setLoading();\r\n    }\r\n    const proverka = (users) =>{\r\n        let data\r\n        {user.users.map(item=>{\r\n            if(item.email === users.profileObj.email)\r\n            {\r\n                data = login(users.profileObj.email, users.tokenId);\r\n                console.log(data)\r\n                user.setUser(user)\r\n                user.setIsAuth(true)\r\n            }\r\n            else{\r\n                data = registration1(users.profileObj.name, users.profileObj.email, users.tokenId);\r\n                console.log(data)\r\n                user.setUser(user)\r\n                user.setIsAuth(true)\r\n            }\r\n        })}\r\n        console.log(user)\r\n        console.log(users)\r\n    }\r\n    const handleLoginFailure = error => {\r\n      console.log(\"Login Failure \", error);\r\n      setLoading();\r\n    }\r\n   \r\n    const handleLogoutSuccess = (response) => {\r\n      console.log(\"Logout Success \", response);\r\n      setUser(null);\r\n    }\r\n   \r\n    const handleLogoutFailure = error => {\r\n      console.log(\"Logout Failure \", error);\r\n    }\r\n   \r\n    const handleRequest = () => {\r\n      setLoading(\"Loading...\");\r\n    }\r\n   \r\n    const handleAutoLoadFinished = () => {\r\n      setLoading();\r\n    }\r\n\r\n    return (\r\n        \r\n        <Navbar variant=\"dark\" className=\"navbar\">\r\n            <Container className=\"d-flex justify-content-center align-items-center\">\r\n            <Nav className=\"ml-auto\">\r\n                <Button className=\"main\" id=\"d1\" variant={\"outline-light\"} onClick={() => history.push(MAIN_ROUTE)} >Главная</Button>\r\n                <Button className=\"main\" id=\"d2\" variant={\"outline-light\"} onClick={() => history.push(CALORIES_ROUTE)} >Подсчет калорий</Button>\r\n                <Image className=\"logo\" src={Logotip}/>\r\n                {users ? <div>\r\n                        <div className=\"name\">Welcome {users.name}!</div>\r\n                        <Button className=\"main\" id=\"d3\" variant={\"outline-light\"} onClick={()=> history.push(USER_ROUTE+'/'+decodedData.id)}>Кабинет</Button>\r\n                            <GoogleLogout\r\n                            clientId={clientId}\r\n                            onLogoutSuccess={handleLogoutSuccess}\r\n                            onFailure={handleLogoutFailure}\r\n                            />\r\n                            <pre>{JSON.stringify(users, null, 2)}</pre>\r\n                        </div> :\r\n                        <GoogleLogin\r\n                            clientId={clientId}\r\n                            buttonText={loading}\r\n                            onSuccess={handleLoginSuccess}\r\n                            onFailure={handleLoginFailure}\r\n                            onRequest={handleRequest}\r\n                            onAutoLoadFinished={handleAutoLoadFinished}\r\n                            isSignedIn={true}\r\n                        />}\r\n                \r\n            </Nav>\r\n            <h2 className=\"textlogo\"> Книга рецептов </h2>\r\n        \r\n        </Container>\r\n        <Container className=\"navbar2\">\r\n        {recipe.types.map(type =>\r\n                <Button \r\n                    className={type.id <= 5 ? 'type' : 'type1'}\r\n                    variant={\"outline-light\"}\r\n                    style={{cursor:'pointer'}}\r\n                    active={type.id === recipe.selectedType.id}\r\n                    onClick={()=> recipe.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                        {type.name}\r\n                </Button>\r\n            )}\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n})\r\n\r\nexport default NavBar"]},"metadata":{},"sourceType":"module"}