{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\modals\\\\CreateProportion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Form, Col, Container } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport '../css.css';\nimport jwt_decode from \"jwt-decode\";\nimport { createProportion, fetchProducts, fetchProportions } from '../http/productAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateProportion = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const [kolvo, setKolvo] = useState('120');\n  const [recipeId, setrecipeId] = useState('');\n  const [productId, setproductId] = useState('');\n  const {\n    user,\n    recipe\n  } = useContext(Context);\n  useEffect(() => {\n    //fetchOneUser(id).then(data => setUsers(data))\n    fetchProducts().then(data => recipe.setProducts(data));\n    fetchProportions().then(data => recipe.setProportions(data));\n  }, []);\n\n  const addProportion = () => {\n    const formData = new FormData();\n    formData.append('kolvo', parseInt(kolvo));\n    formData.append('recipeId', parseInt(recipeId));\n    formData.append('productId', parseInt(productId));\n    createProportion(formData).then();\n  };\n\n  const storedToken = localStorage.getItem(\"token\");\n  let decodedData = jwt_decode(storedToken);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u043F\\u043E\\u0440\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [decodedData.id, /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: recipeId,\n              onChange: e => setrecipeId(e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: user.recipes.map(recipe => {\n                if (decodedData.id === parseInt(recipe.userId)) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: recipe.id,\n                  children: recipe.name\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 24\n                }, this);\n              })\n            }, recipeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), recipeId, recipe.proportions.map(proportion => {\n            if (parseInt(recipeId) === parseInt(proportion.recipeId)) return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"kolvo\",\n              value: proportion.id,\n              children: recipe.products.map(product => {\n                if (product.id === proportion.productId) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lol\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"prodtext\",\n                    value: product.id,\n                    children: [product.name, \":\\u2003\\u2003\\u2003\\u2003 \", proportion.kolvo, \" \\u0433\\u0440\\u0430\\u043C\\u043C\"]\n                  }, product.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 54\n                  }, this), \"\\u2003\\u2003\\u2003\\u2003\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 32\n                }, this);\n              })\n            }, proportion.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 28\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: productId,\n              onChange: e => setproductId(e.target.value),\n              defaultValue: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442...\",\n              children: recipe.products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: product.id,\n                children: product.name\n              }, product.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            value: kolvo,\n            onChange: e => setKolvo(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0432 \\u0433\\u0440\\u0430\\u043C\\u043C\\u0430\\u0445\"\n          }, kolvo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: onHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"recbut\",\n          onClick: addProportion,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateProportion, \"RIVjf5xDfWOVBywuuE0sMKEDs/Y=\");\n\n_c = CreateProportion;\nexport default CreateProportion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProportion\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/modals/CreateProportion.js"],"names":["React","useContext","useEffect","useState","Button","Form","Col","Container","Modal","Context","jwt_decode","createProportion","fetchProducts","fetchProportions","CreateProportion","show","onHide","kolvo","setKolvo","recipeId","setrecipeId","productId","setproductId","user","recipe","then","data","setProducts","setProportions","addProportion","formData","FormData","append","parseInt","storedToken","localStorage","getItem","decodedData","id","e","target","value","recipes","map","userId","name","proportions","proportion","products","product"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport {Button, Form, Col, Container} from \"react-bootstrap\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport {Context} from \"../index\";\r\nimport '../css.css';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {createProportion, fetchProducts, fetchProportions } from '../http/productAPI';\r\n\r\n\r\n\r\nconst CreateProportion = ({show, onHide}) => {\r\n    \r\n    \r\n    const [kolvo, setKolvo] = useState('120')\r\n    const [recipeId, setrecipeId] = useState('')\r\n    const [productId, setproductId] = useState('')\r\n    const {user, recipe}=useContext(Context)\r\n    \r\n   \r\n    useEffect(() => {\r\n        //fetchOneUser(id).then(data => setUsers(data))\r\n        fetchProducts().then(data => recipe.setProducts(data))\r\n        fetchProportions().then(data => recipe.setProportions(data))\r\n    },[])\r\n\r\n    const addProportion = () =>{\r\n        const formData= new FormData()\r\n        formData.append('kolvo', parseInt(kolvo))\r\n        formData.append('recipeId', parseInt(recipeId))\r\n        formData.append('productId', parseInt(productId))\r\n        createProportion(formData).then()\r\n\r\n    }\r\n    \r\n  \r\n   \r\n    const storedToken = localStorage.getItem(\"token\");\r\n    let decodedData = jwt_decode(storedToken);\r\n\r\n    return (\r\n        \r\n        <Modal \r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered>\r\n        <Container className=\"form\">\r\n        <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Добавление пропорций\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n            {decodedData.id}\r\n            <Col md={4}>\r\n            <Form.Control as=\"select\" key={recipeId} value={recipeId} onChange={(e) => setrecipeId(e.target.value)} defaultValue=\"Продукт...\">\r\n                {user.recipes.map(recipe =>{\r\n                if(decodedData.id === parseInt(recipe.userId))\r\n                return <option key={recipe.id} value={recipe.id}>{recipe.name}</option> \r\n                    })}\r\n                    </Form.Control></Col>\r\n\r\n                {recipeId}\r\n                {recipe.proportions.map(proportion => {\r\n                    if (parseInt(recipeId) === parseInt(proportion.recipeId))\r\n                    return <p className=\"kolvo\" key={proportion.id} value={proportion.id}>\r\n                    {recipe.products.map(product => {\r\n                        if (product.id === proportion.productId)\r\n                        return <div className='lol'> <text className=\"prodtext\" value={product.id} key={product.id}>{product.name}:&emsp;&emsp;&emsp;&emsp; {proportion.kolvo} грамм</text> \r\n                        &emsp;&emsp;&emsp;&emsp;<hr/>\r\n                        </div>\r\n                        \r\n                            }\r\n                        )}\r\n                        \r\n                        </p>\r\n                        \r\n                    }\r\n                )}\r\n\r\n\r\n                <Col md={4}>\r\n                    <Form.Control as=\"select\" value={productId} onChange={(e) => setproductId(e.target.value)} defaultValue=\"Продукт...\">\r\n                    {recipe.products.map(product =>\r\n                        <option key={product.id} value={product.id}>{product.name}</option> \r\n                        )}\r\n                    </Form.Control></Col>\r\n                  \r\n                    <Form.Control className=\"mt-3\" key={kolvo} value={kolvo} onChange={e => setKolvo(e.target.value)} placeholder=\"Введите количество в граммах\"/>\r\n\r\n               \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button className=\"recbut\" onClick={onHide}>Закрыть</Button>\r\n            <Button className=\"recbut\" onClick={addProportion}>Добавить</Button>\r\n        </Modal.Footer>\r\n        </Container></Modal>\r\n    );\r\n  }\r\n  \r\nexport default CreateProportion;"]},"metadata":{},"sourceType":"module"}