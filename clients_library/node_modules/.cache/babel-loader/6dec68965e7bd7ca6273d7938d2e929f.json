{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\\\u0420\\u0435\\u0446\\u0435\\u043F\\u0442\\u044B\\\\client\\\\src\\\\pages\\\\RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from \"../index\";\nimport { Container, Col, Image } from 'react-bootstrap';\nimport star from '../assets/Layer.png';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipePage = observer(_c = _s(() => {\n  _s();\n\n  const {\n    recipe\n  } = useContext({\n    id: 1,\n    name: 'Рецепт1',\n    time: 15,\n    complex: 'легко',\n    profile_mini: 'веснмпгир',\n    profole: 'сми',\n    rating: 4.9,\n    img: 'https://img1.russianfood.com/dycontent/images_upl/285/big_284736.jpg',\n    userId: '1',\n    typeId: '5'\n  });\n  const {\n    proportion\n  } = useContext({\n    id: 1,\n    kolvo: 150,\n    recipeId: 1,\n    productId: 4\n  }, {\n    id: 2,\n    kolvo: 147,\n    recipeId: 1,\n    productId: 8\n  }, {\n    id: 3,\n    kolvo: 230,\n    recipeId: 1,\n    productId: 1\n  }, {\n    id: 4,\n    kolvo: 120,\n    recipeId: 1,\n    productId: 16\n  });\n  const {\n    recipekcal\n  } = useContext({\n    id: 1,\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10,\n    recipeId: 1\n  }, {\n    id: 2,\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10,\n    recipeId: 2\n  });\n  const history = useHistory();\n  const {\n    product\n  } = useContext({\n    id: 1,\n    name: 'Свинина',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 2,\n    name: 'Яйцо',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 3,\n    name: 'Мука',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 4,\n    name: 'Продукт4',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 5,\n    name: 'Продукт5',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 6,\n    name: 'Продукт6',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 7,\n    name: 'Продукт7',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 8,\n    name: 'Продукт8',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 9,\n    name: 'Продукт9',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 10,\n    name: 'Продукт10',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 11,\n    name: 'Продукт11',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 12,\n    name: 'Продукт12',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 13,\n    name: 'Продукт13',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 14,\n    name: 'Продукт14',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 15,\n    name: 'Продукт15',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }, {\n    id: 16,\n    name: 'Продукт16',\n    kcal: 340,\n    protein: 12,\n    fat: 7,\n    carb: 10\n  }); //const {id} = useParams(()=> history.get(recipe.id))\n\n  console.log(recipe);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      width: 300,\n      height: 300,\n      src: recipe.img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"namerec1\",\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"descript_mini\",\n        children: recipe.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: star\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 81\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"descript_mini\",\n      children: recipe.profile_mini\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"textinfo\",\n        children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\", recipe.types.map(type => {\n          if (type.id === parseInt(recipe.typeId)) return /*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"infotext\",\n            children: type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"textinfo\",\n        children: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"infotext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"textinfo\",\n        children: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"infotext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"textinfo\",\n        children: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"infotext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"textinfo\",\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"infotext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}, \"bemUjd9cr0IoobTkZEse/NjBXpU=\", false, function () {\n  return [useHistory];\n}));\n_c2 = RecipePage;\nexport default RecipePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecipePage$observer\");\n$RefreshReg$(_c2, \"RecipePage\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/Рецепты/client/src/pages/RecipePage.js"],"names":["React","useContext","Context","Container","Col","Image","star","useHistory","useParams","observer","RecipePage","recipe","id","name","time","complex","profile_mini","profole","rating","img","userId","typeId","proportion","kolvo","recipeId","productId","recipekcal","kcal","protein","fat","carb","history","product","console","log","types","map","type","parseInt"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport { Container, Col, Image } from 'react-bootstrap';\r\nimport star from '../assets/Layer.png';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst RecipePage = observer(() => {\r\n    const{recipe} = useContext({id:1, name:'Рецепт1', time:15, complex:'легко', profile_mini:'веснмпгир', profole:'сми', rating:4.9, img:'https://img1.russianfood.com/dycontent/images_upl/285/big_284736.jpg', userId:'1', typeId:'5'})\r\n    const{proportion} = useContext({id:1, kolvo:150, recipeId: 1, productId: 4},\r\n        {id:2, kolvo:147, recipeId: 1, productId: 8},\r\n        {id:3, kolvo:230, recipeId: 1, productId: 1},\r\n        {id:4, kolvo:120, recipeId: 1, productId: 16})\r\n    const{recipekcal} = useContext({id:1, kcal: 340, protein: 12, fat: 7, carb: 10, recipeId: 1},\r\n        {id:2, kcal: 340, protein: 12, fat: 7, carb: 10, recipeId: 2})\r\n    const history = useHistory()\r\n    const{product} = useContext({id:1, name:'Свинина', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:2, name:'Яйцо', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:3, name:'Мука', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:4, name:'Продукт4', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:5, name:'Продукт5', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:6, name:'Продукт6', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:7, name:'Продукт7', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:8, name:'Продукт8', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:9, name:'Продукт9', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:10, name:'Продукт10', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:11, name:'Продукт11', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:12, name:'Продукт12', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:13, name:'Продукт13', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:14, name:'Продукт14', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:15, name:'Продукт15', kcal: 340, protein: 12, fat: 7, carb: 10},\r\n    {id:16, name:'Продукт16', kcal: 340, protein: 12, fat: 7, carb: 10})\r\n    //const {id} = useParams(()=> history.get(recipe.id))\r\n    \r\n    console.log(recipe)\r\n        return (\r\n            <Container\r\n            className=\"tbody\">\r\n                \r\n                    <Image width={300} height={300} src={recipe.img}/>\r\n                    <h2 className=\"namerec1\">{recipe.name}</h2>\r\n                    <div> <text className=\"descript_mini\">{recipe.rating}</text><img src={star}/> </div>\r\n                    <text className=\"descript_mini\">{recipe.profile_mini}</text>\r\n                    <div className=\"info\">\r\n                    \r\n                    <text className=\"textinfo\">Категория\r\n                    {recipe.types.map(type => {\r\n                        if (type.id === parseInt(recipe.typeId))\r\n                            return <text className=\"infotext\">\r\n                        {type.name}</text> })}</text>\r\n\r\n                    \r\n                    <text className=\"textinfo\">Время приготовления</text>\r\n                    <text className=\"infotext\"></text>\r\n                    \r\n                    <text className=\"textinfo\">Сложность</text>\r\n                    <text className=\"infotext\"></text>\r\n                    \r\n                    <text className=\"textinfo\">Калории</text>\r\n                    <text className=\"infotext\"></text>\r\n                    \r\n                    <text className=\"textinfo\">Автор рецепта</text>\r\n                    <text className=\"infotext\"></text>\r\n                    \r\n                    </div>\r\n            </Container>\r\n        );\r\n    \r\n});\r\n\r\nexport default RecipePage;"]},"metadata":{},"sourceType":"module"}