{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u0415\\u041C\\u0415\\u0421\\u0422\\u0420 6\\\\RECIPE\\\\client\\\\src\\\\pages\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button, Container, Form, Row } from \"react-bootstrap\";\nimport CreateRecipe from '../modals/CreateRecipe';\nimport CreateProduct from '../modals/CreateProduct';\nimport CreateType from '../modals/CreateType';\nimport { Context } from \"../index\";\nimport { observer } from 'mobx-react-lite';\nimport { fetchOneUser, fetchUser } from '../http/userAPI';\nimport { fetchCabinet, fetchOneCabinet } from '../http/cabinetAPI';\nimport { fetchOneRecipe, fetchRecipes } from '../http/userAPI';\nimport RecipeItem from '../components/RecipeItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = observer(_c = _s(() => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [recipeVisible, setRecipeVisible] = useState(false);\n  const [productVisible, setProductVisible] = useState(false);\n  const [typeVisible, setTypeVisible] = useState(false);\n  const {\n    recipe\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context); //const [cabinets, setCabinets] = useState({info:[]})\n  //const [recipes, setRecipes]=useState({info:[]})\n\n  const [users, setUsers] = useState({\n    info: []\n  });\n  useEffect(() => {\n    fetchRecipes().then(data => user.setRecipe(data)); //fetchOneRecipe(id).then(data => setRecipes(data))\n\n    fetchOneUser(id).then(data => setUsers(data));\n    fetchUser().then(data => user.setUser(data)); //fetchOneCabinet(id).then(data=>setCabinets(data))\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"tbody\",\n    children: [users.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      className: \"ml-2\",\n      onClick: () => setRecipeVisible(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateRecipe, {\n      show: recipeVisible,\n      onHide: () => setRecipeVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      className: \"ml-2\",\n      onClick: () => setProductVisible(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateProduct, {\n      show: productVisible,\n      onHide: () => setProductVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      className: \"ml-2\",\n      onClick: () => setTypeVisible(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateType, {\n      show: typeVisible,\n      onHide: () => setTypeVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex\",\n      children: user.recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeItem, {\n        recipe: recipe\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}, \"jSSTesnoOtE8dYkxCHT1rVih3AA=\", false, function () {\n  return [useHistory, useParams];\n}));\n_c2 = UserPage;\nexport default UserPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserPage$observer\");\n$RefreshReg$(_c2, \"UserPage\");","map":{"version":3,"sources":["D:/СЕМЕСТР 6/RECIPE/client/src/pages/UserPage.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","Button","Container","Form","Row","CreateRecipe","CreateProduct","CreateType","Context","observer","fetchOneUser","fetchUser","fetchCabinet","fetchOneCabinet","fetchOneRecipe","fetchRecipes","RecipeItem","UserPage","history","id","recipeVisible","setRecipeVisible","productVisible","setProductVisible","typeVisible","setTypeVisible","recipe","user","users","setUsers","info","then","data","setRecipe","setUser","name","recipes","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Button, Container, Form, Row} from \"react-bootstrap\"\r\nimport CreateRecipe from '../modals/CreateRecipe';\r\nimport CreateProduct from '../modals/CreateProduct';\r\nimport CreateType from '../modals/CreateType';\r\nimport {Context} from \"../index\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchOneUser, fetchUser } from '../http/userAPI';\r\nimport { fetchCabinet, fetchOneCabinet } from '../http/cabinetAPI';\r\nimport { fetchOneRecipe, fetchRecipes } from '../http/userAPI';\r\nimport RecipeItem from '../components/RecipeItem';\r\n\r\n\r\nconst UserPage = observer(() => {\r\n    const history = useHistory()\r\n    const {id} = useParams()\r\n    const [recipeVisible, setRecipeVisible] = useState(false)\r\n    \r\n    const [productVisible, setProductVisible] = useState(false)\r\n    const [typeVisible, setTypeVisible] = useState(false)\r\n    const {recipe} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n    //const [cabinets, setCabinets] = useState({info:[]})\r\n    //const [recipes, setRecipes]=useState({info:[]})\r\n    const [users, setUsers] = useState({info:[]})\r\n    \r\n    useEffect(() => {\r\n        fetchRecipes().then(data => user.setRecipe(data))\r\n        //fetchOneRecipe(id).then(data => setRecipes(data))\r\n        fetchOneUser(id).then(data => setUsers(data))\r\n        fetchUser().then(data=>user.setUser(data))\r\n        //fetchOneCabinet(id).then(data=>setCabinets(data))\r\n    },[])\r\n\r\n        return (          \r\n        <Container className=\"tbody\">\r\n\r\n            {users.name}<br/><br/>\r\n\r\n            <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setRecipeVisible(true)}>Добавить рецепт</Button>\r\n            <CreateRecipe show={recipeVisible} onHide={()=> setRecipeVisible(false)}/>\r\n            \r\n            <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setProductVisible(true)}>Добавить продукт</Button>\r\n            <CreateProduct show={productVisible} onHide={()=> setProductVisible(false)}/>\r\n\r\n            \r\n            <Button variant={\"outline-dark\"} className=\"ml-2\" onClick={() => setTypeVisible(true)}>Добавить тип</Button>\r\n            <CreateType show={typeVisible} onHide={()=> setTypeVisible(false)}/>\r\n         \r\n            \r\n                      \r\n            <Row className=\"d-flex\">\r\n            {user.recipes.map(recipe =>\r\n                <RecipeItem key={recipe.id} recipe={recipe}/>)}\r\n            </Row>\r\n                    \r\n        </Container>\r\n        \r\n        );\r\n    \r\n});\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}